db/Changes
db source change log begun 3/10/93

Wed Mar 10 15:40:12 1993 PST
		Received db.zip source kit from hal (V000).
		Separated i8086 source into machined-dependent subdirectory.
		Renamed i8086trace.h to mtrace.h.
trace.h
trace0.c
trace6.c
		The received kit would not compile because of trace6.c/incb(),
		where the caddr_t (char *) arg should really have been int.
		Changed definition "off_t sngblsym;" to int to clarify the
		code and changed incb() calls accordingly.
trace.h
trace1.c
		Replaced macro definition "offset" with "offsetof" as
		defined in <stddef.h>.
trace.h
trace[0123456].c
i8086/i8086[abcd].c
i8086/i8086.h
i8086/mtrace.h
		Cosmetic changes: deleted Logs, added comments at head and foot.

Thu Mar 11 16:41:39 1993 PST
Makefile
db.h
db[0123456].c
i8086/i86db[1234].c
i8086/i86db.h
		Renamed source files and munged Makefile accordingly.
		Cleaned up headers and #includes.  Added required casts
		so that it compiles without complaint.
i8086/i86db2.c
		Removed unnecessary (constant) parameters to getmodRM()
		and getsib().  There is probably more of this to be done.

Fri Mar 12 08:54:48 1993 PST
		Replaced hdrinfo struct with new globals magic, is_lout,
		aop_size.  magic should disappear, leaving only is_lout.
		Replaced RM16/RM32 and OPD16/OPD32 with 16/32.

Fri Mar 12 12:51:12 1993 PST
		V4.0.1: added -V VERSION printing, made usage() verbose.
		Added coff_hdr to globals, simplfied various calling
		sequences.

Sat Mar 13 00:09:13 1993 PST
		V4.0.2: disassembler now understands NDP opcodes; not
		quite right yet, but almost.

Sat Mar 13 22:11:58 1993 PST
Makefile
i386/i386[1234].c
		V4.0.3: improved coding and corrected minor bugs.
		Renamed i8086/i86db* to i386/i386db*, munged Makefile.

Mon Mar 15 09:17:51 1993 PST
		V4.0.4: continued coding cleanup.

Wed Mar 17 17:04:38 1993 PST
		V4.0.5:   Allow long symbol names.  Build symbol table in
		memory rather than having to access the disk repeatedly.
		Clean up stack traceback.  Change lots of function names.

Thu Mar 18 17:18:38 1993 PST
		V4.0.6:  Recognize register names and handle them correctly.
		Allow leading '%' on register names; this allows the user
		to distinguish function "eax()" from register "%eax".
		Added interactive prompt; default is "db :", use option
		"-p prompt" to change it.

Fri Mar 19 23:45:23 1993 PST
		V4.0.7:  Added output type 'N' for NDP registers.
		Improved single-stepping speed by getting only required
		register information.
Makefile
		Modified to specify -VNDP and -f for fp output.
i386/i386dbs.s
		Added machine-language support to fetch NDP 80-bit value.
		
Thu Mar 25 14:47:40 1993 PST
		V4.0.8:  Made breakpoints work, including :br.
		Added :h option to print help info.
		Added :rN option to dump fp registers.

Fri Mar 26 17:19:51 1993 PST
		V4.0.9:  Make "printf:b\n:e\n:c\n" work as expected.
		Made core files work.  Improved traceback.
		Changed "long" to "ADDR_T" for general sanity in source.

Tue Mar 30 07:56:28 1993 PST
		V4.1.0:  Source cleanup continues.  Made "map_set()"
		calls comprehensible.  More uniform output formats.

Thu Apr  1 15:46:54 1993 PST
		V4.1.1:  Ignore COFF N_ABS sections.  Print [+-] infinity,
		NaN and Denormals more appropriately.  Improved helpinfo().
		Rearranged headers and picked lint so gcc compiles silently.

Fri Apr  2 02:08:26 1993 PST
		V4.1.2:  Replaced s_type with s_segn in SYM.  Much cleanup
		of segmentation bogosity; in particular it now generally
		finds the right segment rather than printing "Addressing error".
		Segment mapping for l.out works again, having been broken
		by inadvertently deleting a line sometime this week.

Mon Apr  5 09:20:47 1993 PDT
		V4.1.3:  More minor cleanup of segmentation code.

Mon Apr  5 09:22:49 1993 PDT
		Fixed rest_syscall() system call handling to work
		correctly at sigreturn, where the system call does not return
		to the following instruction.

Thu Apr 15 13:39:58 1993 PDT
i386/i386db3.c
		Added i486 opcodes to disassembler.

Tue Apr 20 14:50:32 1993 PDT
db.h
		V4.1.4: added OLD_CORE compilation switch to header.
		hal improved the core file format 4/93 for COHERENT V4.0.1r75.
		Compiling without -DOLD_CORE builds db which groks
		only the new format.  Compiling with -DOLD_CORE builds db
		which groks both old and new formats.
		This should disappear when the old format becomes irrelevant.
db1.c
		Modified set_core to understand new core file format,
		with or without dumped text segment.  Deciding if the text
		segment is present is a kludge, since no flag is set.

Wed Apr 21 23:13:43 1993 PDT
		V4.1.5: Changed "%x" to "%X" in format strings.
		Changed default format for COFF data and user segments
		from "w" to "l".  Added sample invocations to usage message.
		Fixed bug reported by hal: "0x400000?" gave bogus "addressing
		error".  Added "clearerr()" call in getputb() on failure,
		to prevent bogus "addressing error" on subsequent calls.
		Added failure checks to fseek() calls.

Wed Apr 21 23:16:44 1993 PDT
i386/i386db2.c
i386/i386db3.c
		V4.1.6:  Jeff Moskow noticed that the db disassembler wrote
			cmpl something, $255
		when it should have written
			cmpl something, $-1
		The only opcodes I found with this sign-extension problems were
		0x83 (Intel "Group1 Ev,Ib", i.e. add/or/adc/sbb/and/sub/xor/cmp
		with sign-extended immediate byte operand) and
		0x6B ("imul Gv, Ev, Ib", 3-operand immediate multiply by
		sign-extended immediate byte operand).  Changed "%Ib" format
		for these cases to new format "%Hb" to indicate sign-extension.

Tue Jun 29 14:28:10 1993 CDT
i386/i386db1.c
		V4.1.7: in setcoffseg(), nfree(shp) was freeing a modified
		pointer, causing a core dump in a case discovered by nigel.
		Now it saves the malloc'ed pointer in oshp and frees it instead.

Thu Jul  1 20:06:36 1993 CDT
		V4.1.8: changes to allow db to be compiled with software fp
		rather than -VNDP, to allow the same executable to run
		on any system.
Makefile
		Deleted -VNDP in CFLAGS and LFLAGS.
db1.c
		Added init_mch() call to interrogate NDP state.
db3.c
		Changed get_fp_reg() call to take destination double *
		and return status, it fails if no NDP or emulation.
i386/i386db.h
i386/mdbdefs.h
i386/mdb.h
i386/i386db0.c
i386/i386db1.c
i386/i386db4.s
		Added NDP_flag, init_mch(), get_fp_reg();
		changed old get_fp_reg() to _get_fp_reg(),
		returning result in EDX:EAX rather than in %st0.

Wed Jul  7 13:41:30 1993 PDT
db1.c
db3.c
i386/i386db1.c
		V4.1.9: added ":hf" for format help information,
		cleaned up and recoded output code in conform().
		Changed :rN output for NDP registers from "???" to "none"
		if no NDP.

Wed Sep 22 13:57:58 1993 PDT
db.h
db1.c
db8.c
		V4.2.0: updated set_core() to handle new core file format
		for COHERENT 4.0.1r84 and later.  It no longer checks the
		object file name (e.g. "foo") against the core file,
		because the core file as of r84 does not contain the
		name of the object which created it; this deficiency
		will supposedly be corrected in a new header suite (r85?) soon.
		Currently, there is nothing in the core file per se which
		indicates whether the text segment was dumped (if DUMP_TEXT
		was patched, cf. coh.386/sig.c).  For COFF-created core files,
		db looks at the specified cs_base of each dumped segment to
		determine its type (text/data/stack have different cs_base
		values 0/400000/80000000), but for l.out-created core files
		this kludge does not work (bases are 0/0/10000), so db
		will not work correctly on l.out-generated core files
		if DUMP_TEXT is nonzero (not that anyone is likely to care...).

Fri Oct  8 15:04:34 1993 PDT
db1.c
		V4.2.1: updated set_core to handle 4.2beta.r90+ header format,
		which now includes the name of the file creating the core file.
		Also undid the above l.out kludge, no longer required with
		the way core files are now created.

Fri Oct 29 16:25:42 1993 PDT
db.h
db0.c
db1.c
db6.c
		V4.2.2: added "-a symfile" option at hal's request.
		The symfile format does not include class or segment
		information, which makes finding the segment associated with
		a given value somewhat kludgy.

Tue May 31 16:01:41 1994 PDT
db.h
db0.c
db6.c
i386/i386db1.c
		Changed FILEHDR to FILHDR, per corresponding <coff.h> change.
